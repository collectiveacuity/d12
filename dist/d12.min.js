/**
* D12 JAVASCRIPT MODULE
* @description A Platonic Solid for Ideal Data
* @author rcj1492
* @license MIT
* @version 0.0.1
* @copyright 2018 Collective Acuity 
* @email support@collectiveacuity.com
**/
"use strict";"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ingestObject=ingestObject;exports.ingestString=ingestString;exports.ingestBoolean=ingestBoolean;exports.ingestArray=ingestArray;exports.ingestInteger=ingestInteger;exports.ingestNumber=ingestNumber;exports.objectSize=objectSize;exports.ingestOptions=ingestOptions;var _lodash=_interopRequireDefault(require("lodash"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _typeof(e){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function e(t){return typeof t}}else{_typeof=function e(t){return t&&typeof Symbol==="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t}}return _typeof(e)}function ingestObject(e){return _lodash.default.isPlainObject(e)?e:new Object.constructor(null)}function ingestString(e){return _lodash.default.isString(e)?e:""}function ingestBoolean(e){return _lodash.default.isBoolean(e)?e:false}function ingestArray(e){return _lodash.default.isArray(e)?e:[]}function ingestInteger(e){return _lodash.default.isInteger(e)?e:0}function ingestNumber(e){return _lodash.default.isNumber(e)?e:0}function objectSize(e){return Object.keys(ingestObject(e)).length}function ingestOptions(e,t){e=ingestObject(e);function n(e,t){var o=new Object.constructor(null);if(!objectSize(t)){for(var i in e){o[i]=e[i]}}else{for(var s in t){if(s in e){if(_typeof(e[s])===_typeof(t[s])){if(_lodash.default.isArray(e[s])){o[s]=r(e[s],t[s])}else if(_lodash.default.isPlainObject(e[s])){o[s]=n(e[s],t[s])}else{o[s]=e[s]}}else{o[s]=t[s]}}else{o[s]=t[s]}}}return o}function r(e,t){var o=[];var i=null;try{i=t[0]}catch(e){}for(var s=0;s<e.length;s++){if(i==null){o.push(e)}else{if(_typeof(e[s])===_typeof(i)){if(_lodash.default.isArray(e[s])){o.push(r(e[s],i))}else if(_lodash.default.isPlainObject(e[s])){o.push(n(e[s],i))}else{o.push(e[s])}}}}return o}return n(e,t)}