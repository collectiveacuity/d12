/*!
* @name D12
* @description A Platonic Solid for Ideal Data
* @author rcj1492
* @license MIT
* @version 0.0.6
* @copyright 2018-2019 Collective Acuity 
* @email support@collectiveacuity.com
* @url https://github.com/collectiveacuity/d12
*/
"use strict";"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isString=isString;exports.isNumber=isNumber;exports.isBoolean=isBoolean;exports.isPlainObject=isPlainObject;exports.isArray=isArray;exports.isInteger=isInteger;exports.isObjectLike=isObjectLike;exports.isDate=isDate;exports.isFunction=isFunction;exports.ingestObject=ingestObject;exports.ingestString=ingestString;exports.ingestBoolean=ingestBoolean;exports.ingestArray=ingestArray;exports.ingestInteger=ingestInteger;exports.ingestNumber=ingestNumber;exports.ingestMap=ingestMap;exports.objectSize=objectSize;exports.ingestOptions=ingestOptions;exports.deepCopy=deepCopy;exports.emptyObject=emptyObject;exports.joinWords=joinWords;exports.parseDiff=parseDiff;exports.upsertValues=upsertValues;exports.validateString=validateString;exports.validateData=validateData;var _isString2=_interopRequireDefault(require("lodash/isString"));var _isNumber2=_interopRequireDefault(require("lodash/isNumber"));var _isBoolean2=_interopRequireDefault(require("lodash/isBoolean"));var _isPlainObject2=_interopRequireDefault(require("lodash/isPlainObject"));var _isArray2=_interopRequireDefault(require("lodash/isArray"));var _isInteger2=_interopRequireDefault(require("lodash/isInteger"));var _isObjectLike2=_interopRequireDefault(require("lodash/isObjectLike"));var _isDate2=_interopRequireDefault(require("lodash/isDate"));var _isFunction2=_interopRequireDefault(require("lodash/isFunction"));var _get2=_interopRequireDefault(require("lodash/get"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _typeof(e){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function e(t){return typeof t}}else{_typeof=function e(t){return t&&typeof Symbol==="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t}}return _typeof(e)}function isString(e){return(0,_isString2.default)(e)}function isNumber(e){return(0,_isNumber2.default)(e)}function isBoolean(e){return(0,_isBoolean2.default)(e)}function isPlainObject(e){return(0,_isPlainObject2.default)(e)}function isArray(e){return(0,_isArray2.default)(e)}function isInteger(e){return(0,_isInteger2.default)(e)}function isObjectLike(e){return(0,_isObjectLike2.default)(e)}function isDate(e){return(0,_isDate2.default)(e)}function isFunction(e){return(0,_isFunction2.default)(e)}function ingestObject(e){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"";if(t){return isPlainObject((0,_get2.default)(e,t))?e:{}}else{return isPlainObject(e)?e:{}}}function ingestString(e){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"";if(t){return isString((0,_get2.default)(e,t))?e:""}else{return isString(e)?e:""}}function ingestBoolean(e){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"";if(t){return isBoolean((0,_get2.default)(e,t))?e:false}else{return isBoolean(e)?e:false}}function ingestArray(e){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"";if(t){return isArray((0,_get2.default)(e,t))?e:[]}else{return isArray(e)?e:[]}}function ingestInteger(e){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"";if(t){return isInteger((0,_get2.default)(e,t))?e:0}else{return isInteger(e)?e:0}}function ingestNumber(e){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"";if(t){return isNumber((0,_get2.default)(e,t))?e:0}else{return isNumber(e)?e:0}}function ingestMap(e){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"";if(t){return isPlainObject((0,_get2.default)(e,t))?e:{}}else{return isPlainObject(e)?e:{}}}function objectSize(e){return Object.keys(ingestObject(e)).length}function ingestOptions(e,t){e=ingestMap(e);function i(e,t){var n={};if(!objectSize(t)){for(var s in e){n[s]=e[s]}}else{for(var u in t){if(u in e){if(_typeof(e[u])===_typeof(t[u])){if(isArray(e[u])){n[u]=r(e[u],t[u])}else if(isPlainObject(e[u])){n[u]=i(e[u],t[u])}else{n[u]=e[u]}}else{n[u]=t[u]}}else if(isArray(t[u])){n[u]=[]}else{n[u]=t[u]}}}return n}function r(e,t){var n=[];var s=null;try{s=t[0]}catch(e){}for(var u=0;u<e.length;u++){if(s==null){n.push(e)}else{if(_typeof(e[u])===_typeof(s)){if(isArray(e[u])){n.push(r(e[u],s))}else if(isPlainObject(e[u])){n.push(i(e[u],s))}else{n.push(e[u])}}}}return n}return i(e,t)}function deepCopy(e){if(e==null||!isObjectLike(e)){return e}else{if(isDate(e)){return e}var t=e.constructor();for(var i in e){if(e.hasOwnProperty(i))t[i]=deepCopy(e[i])}return t}}function emptyObject(e){for(var t in e){if(e.hasOwnProperty(t)){e[t]=null;delete e[t]}}}function joinWords(e,t){var i={conjunction:"and",prefix:"",suffix:""};var r=ingestOptions(t,i);var n="";for(var s=0;s<e.length;s++){if(n){if(s+1===e.length){n+=" "+r.conjunction+" "}else{n+=", "}}n+=r.prefix+e[s]+r.suffix}return n}function parseDiff(e,t){function i(e,t){var r={};for(var n in e){if(n in t){if(e[n]==null&&t[n]!=null){r[n]=e[n]}else if(isPlainObject(e[n])){if(isPlainObject(t[n])){var s=i(e[n],t[n]);if(objectSize(s)){r[n]=s}}else{r[n]=e[n]}}else if(e[n]!==t[n]){r[n]=e[n]}}else{r[n]=e[n]}}for(var u in t){if(!(u in e)){r[u]=null}}return r}var r={altered:ingestObject(e),original:ingestObject(t),parsed:{}};if(objectSize(r.altered)){r.parsed=i(r.altered,r.original)}return r.parsed}function upsertValues(e,t){function i(e,t){for(var r in e){if(e[r]==null&&r in t){delete t[r]}else if(isPlainObject(e[r])){if(r in t&&isPlainObject(t[r])){t[r]=i(e[r],t[r])}else{t[r]=e[r]}}else{t[r]=e[r]}}return t}var r={upsert:deepCopy(ingestObject(e)),existing:deepCopy(ingestObject(t)),updated:{}};if(objectSize(r.upsert)){r.updated=i(r.upsert,r.existing)}return r.updated}function validateString(e,t){var i={must_contain:{},must_not_contain:{},equal_to:{},max_length:0,min_length:0,discrete_values:[""],excluded_values:[""]};var r=ingestOptions(t,i);var n={required:"",prohibited:""};for(var s in r.must_contain){var u=new RegExp(s,"i");if(!u.test(e)){n.required=r.must_contain[s];return n}}for(var a in r.equal_to){if(a!==e){n.required=r.equal_to[a];return n}}if(r.min_length){if(e.length<r.min_length){n.required="must contain at least "+r.min_length.toString()+" characters";return n}}if(r.discrete_values.length){if(r.discrete_values.indexOf(e)===-1){var o=joinWords(r.discrete_values,{conjunction:"or",prefix:'"',suffix:'"'});n.required="may only be "+o;return n}}for(var l in r.must_not_contain){var f=new RegExp(l,"i");if(f.test(e)){n.prohibited=r.must_not_contain[l];return n}}if(r.max_length){if(e.length>r.max_length){n.prohibited="cannot contain more than "+r.max_length.toString()+" characters";return n}}if(r.excluded_values.length){if(r.excluded_values.indexOf(e)>-1){var c=joinWords(r.excluded_values,{conjunction:"or",prefix:'"',suffix:'"'});n.prohibited="cannot be "+c;return n}}return n}function validateData(e,t){var i={required:"",prohibited:""};var r=ingestString(t.datatype);if(r==="string"){if(isString(e)){return validateString(e,t)}else{i.required="must be a string datatype.";return i}}return i}